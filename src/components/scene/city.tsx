/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 my-city.glb --transform 
Files: my-city.glb [160.42KB] > my-city-transformed.glb [13.57KB] (92%)
*/

import { useGLTF } from "@react-three/drei";

export function City(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"/models/my-city-transformed.glb"
	) as any;
	return (
		<group {...props} dispose={null} rotation={[0, Math.PI, 0]}>
			<mesh
				geometry={nodes.Cube.geometry}
				material={materials.PaletteMaterial001}
				position={[0, 0.282, -2.9]}
				scale={[-2.667, -0.088, -0.088]}
			/>
			<mesh
				geometry={nodes.Cube001.geometry}
				material={nodes.Cube001.material}
				position={[0, 0.282, 2.896]}
				rotation={[Math.PI, 0, Math.PI]}
				scale={[-2.667, -0.088, -0.088]}
			/>
			<instancedMesh
				args={[nodes.tree01_1.geometry, materials.Mat, 8]}
				instanceMatrix={nodes.tree01_1.instanceMatrix}
			/>
			<instancedMesh
				args={[nodes.Plane002.geometry, nodes.Plane002.material, 24]}
				instanceMatrix={nodes.Plane002.instanceMatrix}
			/>
		</group>
	);
}

useGLTF.preload("/models/my-city-transformed.glb");
